import { Enums, ServiceEnums, PromiseTypes, ServiceTypes, Types as CoreTypes } from '../../../bundles/core';
import AbortablePromise = PromiseTypes.AbortablePromise;

export namespace TvInspectionServiceTypes { 
    export namespace Requests {
        export interface AddObservation extends ServiceTypes.CoreRequestBase {
            Cause?: number;
            CctvCode?: string;
            ClockTo?: number;
            Continuous?: string;
            DistFromDown?: number;
            DistFromUp?: number;
            Joint?: string;
            ObservDesc?: string;
            ObservDescScore?: number;
            ObservPos?: string;
            ObservRemarks?: string;
            ObservType?: string;
            TapeRead?: string;
            TvId: number;
            ValueDimension1?: number;
            ValueDimension2?: number;
            ValuePercent?: number;
        }
        export interface ById extends ServiceTypes.CoreRequestBase {
            TvId: number;
        }
        export interface ByIds extends ServiceTypes.CoreRequestBase {
            TvIds: number[];
        }
        export interface ByWorkOrder extends ServiceTypes.CoreRequestBase {
            WorkOrderIds?: string[];
        }
        export interface CctvObservationCodeTypes extends ServiceTypes.CoreRequestBase {
        }
        export interface ChangeCustomFieldCategory extends ServiceTypes.CoreRequestBase {
            CategoryId: number;
            TvIds: number[];
        }
        export interface CodeDescriptions extends ServiceTypes.CoreRequestBase {
            PipeType: string;
        }
        export interface ConfirmDyeLeaks extends ServiceTypes.CoreRequestBase {
            PipeLeakIds?: number[];
            TvConfirmed?: boolean;
            TvId: number;
        }
        export interface ConfirmSmokeTests extends ServiceTypes.CoreRequestBase {
            PipeLeakIds?: number[];
            TvConfirmed?: boolean;
            TvId: number;
        }
        export interface Create extends ServiceTypes.CoreRequestBase {
            CertificateNumber?: string;
            City?: string;
            CondRating?: number;
            CounterStart?: string;
            CounterStop?: string;
            Customer?: string;
            CustomFieldValues?: {[key: number]: string};
            Date1?: Date;
            Date2?: Date;
            Date3?: Date;
            Date4?: Date;
            Date5?: Date;
            DateCleaned?: Date;
            Deterioration?: string;
            DeterScore?: number;
            Diameter?: number;
            DownLocation?: string;
            DownMh?: string;
            DownType?: string;
            DrainageArea?: string;
            DwnDepth?: number;
            DyeId?: number;
            FlowControl?: string;
            FlowDepth?: number;
            ForemanRecomnd?: string;
            GroundCond?: string;
            GroundCondScore?: number;
            HydRating?: number;
            InspCustFieldCatId?: number;
            InspectedBySid?: number;
            JointLength?: number;
            JointType?: string;
            LiningMethod?: string;
            Location?: string;
            MapNumber?: string;
            MasterTapeNum?: string;
            Material?: string;
            Num1?: number;
            Num2?: number;
            Num3?: number;
            Num4?: number;
            Num5?: number;
            ObservationSum?: string;
            ObservMethod?: number;
            OmRating?: number;
            Owner?: string;
            PipeId?: string;
            PipeLength?: number;
            PipeType?: string;
            PoNumber?: string;
            PrecipType?: string;
            PrecipTypeScore?: number;
            PreCleaning?: string;
            RehabStatus?: string;
            RepairsMade?: string;
            ReverseSetup?: boolean;
            RimToGradeD?: number;
            RimToGradeU?: number;
            RimToInvertD?: number;
            RimToInvertU?: number;
            RootRating?: number;
            SewerCategory?: string;
            SewerUse?: string;
            Shape?: string;
            SmokeId?: number;
            Spot?: string;
            SpotScore?: number;
            Street?: string;
            StructRating?: number;
            SuperAprvlComnts?: string;
            SurfaceType?: string;
            TapeLibraryNum?: string;
            Text1?: string;
            Text10?: string;
            Text2?: string;
            Text3?: string;
            Text4?: string;
            Text5?: string;
            Text6?: string;
            Text7?: string;
            Text8?: string;
            Text9?: string;
            TotalLength?: number;
            TvDate?: Date;
            TvObservations?: CoreTypes.TvObservation[];
            TvReason?: string;
            UpdateGis?: boolean;
            UpdateMap?: boolean;
            UpDepth?: number;
            UpLocation?: string;
            UpMh?: string;
            UpType?: string;
            VideoTapeNum?: string;
            VtrFormat?: string;
            Width?: number;
            WorkOrderId?: string;
            YearLaid?: number;
            YearRenewed?: number;
        }
        export interface CreateFromPacp extends ServiceTypes.CoreRequestBase {
            CertificateNumber?: string;
            City?: string;
            CondRating?: number;
            CounterStart?: string;
            CounterStop?: string;
            Customer?: string;
            CustomFieldValues?: {[key: number]: string};
            Date1?: Date;
            Date2?: Date;
            Date3?: Date;
            Date4?: Date;
            Date5?: Date;
            DateCleaned?: Date;
            Deterioration?: string;
            DeterScore?: number;
            Diameter?: number;
            DownLocation?: string;
            DownMh?: string;
            DownType?: string;
            DrainageArea?: string;
            DwnDepth?: number;
            DyeId?: number;
            FlowControl?: string;
            FlowDepth?: number;
            ForemanRecomnd?: string;
            GroundCond?: string;
            GroundCondScore?: number;
            HydRating?: number;
            InspCustFieldCatId?: number;
            InspectedBySid?: number;
            JointLength?: number;
            JointType?: string;
            LiningMethod?: string;
            Location?: string;
            MapNumber?: string;
            MasterTapeNum?: string;
            Material?: string;
            Num1?: number;
            Num2?: number;
            Num3?: number;
            Num4?: number;
            Num5?: number;
            ObservationSum?: string;
            ObservMethod?: number;
            OmRating?: number;
            Owner?: string;
            PipeId?: string;
            PipeLength?: number;
            PipeType?: string;
            PoNumber?: string;
            PrecipType?: string;
            PrecipTypeScore?: number;
            PreCleaning?: string;
            RehabStatus?: string;
            RepairsMade?: string;
            ReverseSetup?: boolean;
            RimToGradeD?: number;
            RimToGradeU?: number;
            RimToInvertD?: number;
            RimToInvertU?: number;
            RootRating?: number;
            SewerCategory?: string;
            SewerUse?: string;
            Shape?: string;
            SmokeId?: number;
            Spot?: string;
            SpotScore?: number;
            Street?: string;
            StructRating?: number;
            SuperAprvlComnts?: string;
            SurfaceType?: string;
            TapeLibraryNum?: string;
            Text1?: string;
            Text10?: string;
            Text2?: string;
            Text3?: string;
            Text4?: string;
            Text5?: string;
            Text6?: string;
            Text7?: string;
            Text8?: string;
            Text9?: string;
            TotalLength?: number;
            TvDate?: Date;
            TvObservations?: CoreTypes.TvObservation[];
            TvReason?: string;
            UpdateGis?: boolean;
            UpdateMap?: boolean;
            UpDepth?: number;
            UpLocation?: string;
            UpMh?: string;
            UpType?: string;
            VideoLocation?: string;
            VideoTapeNum?: string;
            VtrFormat?: string;
            Width?: number;
            WorkOrderId?: string;
            YearLaid?: number;
            YearRenewed?: number;
        }
        export interface CreateSearchDefinition extends ServiceTypes.CoreRequestBase {
            CertificateNumber?: string[];
            City?: string[];
            CondRatingIncludeNulls?: boolean;
            CondRatingIsMaxValueExclusive?: boolean;
            CondRatingIsMinValueExclusive?: boolean;
            CondRatingMaxValue?: number;
            CondRatingMinValue?: number;
            CondRatingRangeType?: number;
            CondRatingValues?: number[];
            CounterStart?: string[];
            CounterStop?: string[];
            Customer?: string[];
            Date1Begin?: Date;
            Date1End?: Date;
            Date1IsNull?: boolean;
            Date1NotInRange?: boolean;
            Date1RangeIncludeCurrent?: boolean;
            Date1RangeLast?: number;
            Date1RangeNext?: number;
            Date1RangeUnits?: number;
            Date2Begin?: Date;
            Date2End?: Date;
            Date2IsNull?: boolean;
            Date2NotInRange?: boolean;
            Date2RangeIncludeCurrent?: boolean;
            Date2RangeLast?: number;
            Date2RangeNext?: number;
            Date2RangeUnits?: number;
            Date3Begin?: Date;
            Date3End?: Date;
            Date3IsNull?: boolean;
            Date3NotInRange?: boolean;
            Date3RangeIncludeCurrent?: boolean;
            Date3RangeLast?: number;
            Date3RangeNext?: number;
            Date3RangeUnits?: number;
            Date4Begin?: Date;
            Date4End?: Date;
            Date4IsNull?: boolean;
            Date4NotInRange?: boolean;
            Date4RangeIncludeCurrent?: boolean;
            Date4RangeLast?: number;
            Date4RangeNext?: number;
            Date4RangeUnits?: number;
            Date5Begin?: Date;
            Date5End?: Date;
            Date5IsNull?: boolean;
            Date5NotInRange?: boolean;
            Date5RangeIncludeCurrent?: boolean;
            Date5RangeLast?: number;
            Date5RangeNext?: number;
            Date5RangeUnits?: number;
            DateCleanedBegin?: Date;
            DateCleanedEnd?: Date;
            DateCleanedIsNull?: boolean;
            DateCleanedNotInRange?: boolean;
            DateCleanedRangeIncludeCurrent?: boolean;
            DateCleanedRangeLast?: number;
            DateCleanedRangeNext?: number;
            DateCleanedRangeUnits?: number;
            Deterioration?: string[];
            DeterScoreIncludeNulls?: boolean;
            DeterScoreIsMaxValueExclusive?: boolean;
            DeterScoreIsMinValueExclusive?: boolean;
            DeterScoreMaxValue?: number;
            DeterScoreMinValue?: number;
            DeterScoreRangeType?: number;
            DeterScoreValues?: number[];
            DiameterIncludeNulls?: boolean;
            DiameterIsMaxValueExclusive?: boolean;
            DiameterIsMinValueExclusive?: boolean;
            DiameterMaxValue?: number;
            DiameterMinValue?: number;
            DiameterRangeType?: number;
            DiameterValues?: number[];
            DownLocation?: string[];
            DownMh?: string[];
            DownType?: string[];
            DrainageArea?: string[];
            DwnDepthIncludeNulls?: boolean;
            DwnDepthIsMaxValueExclusive?: boolean;
            DwnDepthIsMinValueExclusive?: boolean;
            DwnDepthMaxValue?: number;
            DwnDepthMinValue?: number;
            DwnDepthRangeType?: number;
            DwnDepthValues?: number[];
            DyeId?: number[];
            DyeIdIsInList?: boolean;
            FlowControl?: string[];
            FlowDepthIncludeNulls?: boolean;
            FlowDepthIsMaxValueExclusive?: boolean;
            FlowDepthIsMinValueExclusive?: boolean;
            FlowDepthMaxValue?: number;
            FlowDepthMinValue?: number;
            FlowDepthRangeType?: number;
            FlowDepthValues?: number[];
            ForemanRecomnd?: string[];
            GroundCond?: string[];
            GroundCondScoreIncludeNulls?: boolean;
            GroundCondScoreIsMaxValueExclusive?: boolean;
            GroundCondScoreIsMinValueExclusive?: boolean;
            GroundCondScoreMaxValue?: number;
            GroundCondScoreMinValue?: number;
            GroundCondScoreRangeType?: number;
            GroundCondScoreValues?: number[];
            HydRatingIncludeNulls?: boolean;
            HydRatingIsMaxValueExclusive?: boolean;
            HydRatingIsMinValueExclusive?: boolean;
            HydRatingMaxValue?: number;
            HydRatingMinValue?: number;
            HydRatingRangeType?: number;
            HydRatingValues?: number[];
            InspCustFieldCatId?: number[];
            InspCustFieldCatIdIsInList?: boolean;
            InspectedBy?: string[];
            InspectedBySid?: number[];
            InspectedBySidIsInList?: boolean;
            JointLengthIncludeNulls?: boolean;
            JointLengthIsMaxValueExclusive?: boolean;
            JointLengthIsMinValueExclusive?: boolean;
            JointLengthMaxValue?: number;
            JointLengthMinValue?: number;
            JointLengthRangeType?: number;
            JointLengthValues?: number[];
            JointType?: string[];
            LiningMethod?: string[];
            Location?: string[];
            MapNumber?: string[];
            MasterTapeNum?: string[];
            Material?: string[];
            MaxResults?: number;
            Num1IncludeNulls?: boolean;
            Num1IsMaxValueExclusive?: boolean;
            Num1IsMinValueExclusive?: boolean;
            Num1MaxValue?: number;
            Num1MinValue?: number;
            Num1RangeType?: number;
            Num1Values?: number[];
            Num2IncludeNulls?: boolean;
            Num2IsMaxValueExclusive?: boolean;
            Num2IsMinValueExclusive?: boolean;
            Num2MaxValue?: number;
            Num2MinValue?: number;
            Num2RangeType?: number;
            Num2Values?: number[];
            Num3IncludeNulls?: boolean;
            Num3IsMaxValueExclusive?: boolean;
            Num3IsMinValueExclusive?: boolean;
            Num3MaxValue?: number;
            Num3MinValue?: number;
            Num3RangeType?: number;
            Num3Values?: number[];
            Num4IncludeNulls?: boolean;
            Num4IsMaxValueExclusive?: boolean;
            Num4IsMinValueExclusive?: boolean;
            Num4MaxValue?: number;
            Num4MinValue?: number;
            Num4RangeType?: number;
            Num4Values?: number[];
            Num5IncludeNulls?: boolean;
            Num5IsMaxValueExclusive?: boolean;
            Num5IsMinValueExclusive?: boolean;
            Num5MaxValue?: number;
            Num5MinValue?: number;
            Num5RangeType?: number;
            Num5Values?: number[];
            ObservationSum?: string[];
            ObservMethod?: number;
            OmRatingIncludeNulls?: boolean;
            OmRatingIsMaxValueExclusive?: boolean;
            OmRatingIsMinValueExclusive?: boolean;
            OmRatingMaxValue?: number;
            OmRatingMinValue?: number;
            OmRatingRangeType?: number;
            OmRatingValues?: number[];
            Owner?: string[];
            PipeId?: string[];
            PipeLengthIncludeNulls?: boolean;
            PipeLengthIsMaxValueExclusive?: boolean;
            PipeLengthIsMinValueExclusive?: boolean;
            PipeLengthMaxValue?: number;
            PipeLengthMinValue?: number;
            PipeLengthRangeType?: number;
            PipeLengthValues?: number[];
            PipeType?: string[];
            PoNumber?: string[];
            PrecipType?: string[];
            PrecipTypeScoreIncludeNulls?: boolean;
            PrecipTypeScoreIsMaxValueExclusive?: boolean;
            PrecipTypeScoreIsMinValueExclusive?: boolean;
            PrecipTypeScoreMaxValue?: number;
            PrecipTypeScoreMinValue?: number;
            PrecipTypeScoreRangeType?: number;
            PrecipTypeScoreValues?: number[];
            PreCleaning?: string[];
            RehabStatus?: string[];
            RepairsMade?: string[];
            ReverseSetup?: boolean;
            RimToGradeDIncludeNulls?: boolean;
            RimToGradeDIsMaxValueExclusive?: boolean;
            RimToGradeDIsMinValueExclusive?: boolean;
            RimToGradeDMaxValue?: number;
            RimToGradeDMinValue?: number;
            RimToGradeDRangeType?: number;
            RimToGradeDValues?: number[];
            RimToGradeUIncludeNulls?: boolean;
            RimToGradeUIsMaxValueExclusive?: boolean;
            RimToGradeUIsMinValueExclusive?: boolean;
            RimToGradeUMaxValue?: number;
            RimToGradeUMinValue?: number;
            RimToGradeURangeType?: number;
            RimToGradeUValues?: number[];
            RimToInvertDIncludeNulls?: boolean;
            RimToInvertDIsMaxValueExclusive?: boolean;
            RimToInvertDIsMinValueExclusive?: boolean;
            RimToInvertDMaxValue?: number;
            RimToInvertDMinValue?: number;
            RimToInvertDRangeType?: number;
            RimToInvertDValues?: number[];
            RimToInvertUIncludeNulls?: boolean;
            RimToInvertUIsMaxValueExclusive?: boolean;
            RimToInvertUIsMinValueExclusive?: boolean;
            RimToInvertUMaxValue?: number;
            RimToInvertUMinValue?: number;
            RimToInvertURangeType?: number;
            RimToInvertUValues?: number[];
            RootRatingIncludeNulls?: boolean;
            RootRatingIsMaxValueExclusive?: boolean;
            RootRatingIsMinValueExclusive?: boolean;
            RootRatingMaxValue?: number;
            RootRatingMinValue?: number;
            RootRatingRangeType?: number;
            RootRatingValues?: number[];
            SaveDefinition?: boolean;
            SearchName?: string;
            SewerCategory?: string[];
            SewerUse?: string[];
            Shape?: string[];
            SharedWithin?: number;
            SmokeId?: number[];
            SmokeIdIsInList?: boolean;
            Spot?: string[];
            SpotScoreIncludeNulls?: boolean;
            SpotScoreIsMaxValueExclusive?: boolean;
            SpotScoreIsMinValueExclusive?: boolean;
            SpotScoreMaxValue?: number;
            SpotScoreMinValue?: number;
            SpotScoreRangeType?: number;
            SpotScoreValues?: number[];
            Street?: string[];
            StructRatingIncludeNulls?: boolean;
            StructRatingIsMaxValueExclusive?: boolean;
            StructRatingIsMinValueExclusive?: boolean;
            StructRatingMaxValue?: number;
            StructRatingMinValue?: number;
            StructRatingRangeType?: number;
            StructRatingValues?: number[];
            SuperAprvlComnts?: string[];
            SurfaceType?: string[];
            TapeLibraryNum?: string[];
            Text1?: string[];
            Text10?: string[];
            Text2?: string[];
            Text3?: string[];
            Text4?: string[];
            Text5?: string[];
            Text6?: string[];
            Text7?: string[];
            Text8?: string[];
            Text9?: string[];
            TotalLengthIncludeNulls?: boolean;
            TotalLengthIsMaxValueExclusive?: boolean;
            TotalLengthIsMinValueExclusive?: boolean;
            TotalLengthMaxValue?: number;
            TotalLengthMinValue?: number;
            TotalLengthRangeType?: number;
            TotalLengthValues?: number[];
            TvDateBegin?: Date;
            TvDateEnd?: Date;
            TvDateIsNull?: boolean;
            TvDateNotInRange?: boolean;
            TvDateRangeIncludeCurrent?: boolean;
            TvDateRangeLast?: number;
            TvDateRangeNext?: number;
            TvDateRangeUnits?: number;
            TvId?: number[];
            TvIdIsInList?: boolean;
            TvReason?: string[];
            UpdateMap?: boolean;
            UpDepthIncludeNulls?: boolean;
            UpDepthIsMaxValueExclusive?: boolean;
            UpDepthIsMinValueExclusive?: boolean;
            UpDepthMaxValue?: number;
            UpDepthMinValue?: number;
            UpDepthRangeType?: number;
            UpDepthValues?: number[];
            UpLocation?: string[];
            UpMh?: string[];
            UpType?: string[];
            VideoLocation?: string[];
            VideoTapeNum?: string[];
            VtrFormat?: string[];
            WidthIncludeNulls?: boolean;
            WidthIsMaxValueExclusive?: boolean;
            WidthIsMinValueExclusive?: boolean;
            WidthMaxValue?: number;
            WidthMinValue?: number;
            WidthRangeType?: number;
            WidthValues?: number[];
            WorkOrderId?: string[];
            YearLaidIncludeNulls?: boolean;
            YearLaidIsMaxValueExclusive?: boolean;
            YearLaidIsMinValueExclusive?: boolean;
            YearLaidMaxValue?: number;
            YearLaidMinValue?: number;
            YearLaidRangeType?: number;
            YearLaidValues?: number[];
            YearRenewedIncludeNulls?: boolean;
            YearRenewedIsMaxValueExclusive?: boolean;
            YearRenewedIsMinValueExclusive?: boolean;
            YearRenewedMaxValue?: number;
            YearRenewedMinValue?: number;
            YearRenewedRangeType?: number;
            YearRenewedValues?: number[];
        }
        export interface DescriptionScores extends ServiceTypes.CoreRequestBase {
        }
        export interface DownstreamNode extends ServiceTypes.CoreRequestBase {
            EntityType: string;
            EntityUid: string;
        }
        export interface InspectedBy extends ServiceTypes.CoreRequestBase {
            DomainId?: number;
            TvId?: number;
        }
        export interface Observation extends ServiceTypes.CoreRequestBase {
            ObservationId?: number;
        }
        export interface ObservationCauseCodeDescriptions extends ServiceTypes.CoreRequestBase {
            ObservationMethod?: number;
        }
        export interface ObservationCodeTypes extends ServiceTypes.CoreRequestBase {
        }
        export interface Observations extends ServiceTypes.CoreRequestBase {
            TvIds?: number[];
        }
        export interface Search extends ServiceTypes.CoreRequestBase {
            CertificateNumber?: string[];
            City?: string[];
            CondRatingIncludeNulls?: boolean;
            CondRatingIsMaxValueExclusive?: boolean;
            CondRatingIsMinValueExclusive?: boolean;
            CondRatingMaxValue?: number;
            CondRatingMinValue?: number;
            CondRatingRangeType?: number;
            CondRatingValues?: number[];
            CounterStart?: string[];
            CounterStop?: string[];
            Customer?: string[];
            Date1Begin?: Date;
            Date1End?: Date;
            Date1IsNull?: boolean;
            Date1NotInRange?: boolean;
            Date1RangeIncludeCurrent?: boolean;
            Date1RangeLast?: number;
            Date1RangeNext?: number;
            Date1RangeUnits?: number;
            Date2Begin?: Date;
            Date2End?: Date;
            Date2IsNull?: boolean;
            Date2NotInRange?: boolean;
            Date2RangeIncludeCurrent?: boolean;
            Date2RangeLast?: number;
            Date2RangeNext?: number;
            Date2RangeUnits?: number;
            Date3Begin?: Date;
            Date3End?: Date;
            Date3IsNull?: boolean;
            Date3NotInRange?: boolean;
            Date3RangeIncludeCurrent?: boolean;
            Date3RangeLast?: number;
            Date3RangeNext?: number;
            Date3RangeUnits?: number;
            Date4Begin?: Date;
            Date4End?: Date;
            Date4IsNull?: boolean;
            Date4NotInRange?: boolean;
            Date4RangeIncludeCurrent?: boolean;
            Date4RangeLast?: number;
            Date4RangeNext?: number;
            Date4RangeUnits?: number;
            Date5Begin?: Date;
            Date5End?: Date;
            Date5IsNull?: boolean;
            Date5NotInRange?: boolean;
            Date5RangeIncludeCurrent?: boolean;
            Date5RangeLast?: number;
            Date5RangeNext?: number;
            Date5RangeUnits?: number;
            DateCleanedBegin?: Date;
            DateCleanedEnd?: Date;
            DateCleanedIsNull?: boolean;
            DateCleanedNotInRange?: boolean;
            DateCleanedRangeIncludeCurrent?: boolean;
            DateCleanedRangeLast?: number;
            DateCleanedRangeNext?: number;
            DateCleanedRangeUnits?: number;
            Deterioration?: string[];
            DeterScoreIncludeNulls?: boolean;
            DeterScoreIsMaxValueExclusive?: boolean;
            DeterScoreIsMinValueExclusive?: boolean;
            DeterScoreMaxValue?: number;
            DeterScoreMinValue?: number;
            DeterScoreRangeType?: number;
            DeterScoreValues?: number[];
            DiameterIncludeNulls?: boolean;
            DiameterIsMaxValueExclusive?: boolean;
            DiameterIsMinValueExclusive?: boolean;
            DiameterMaxValue?: number;
            DiameterMinValue?: number;
            DiameterRangeType?: number;
            DiameterValues?: number[];
            DownLocation?: string[];
            DownMh?: string[];
            DownType?: string[];
            DrainageArea?: string[];
            DwnDepthIncludeNulls?: boolean;
            DwnDepthIsMaxValueExclusive?: boolean;
            DwnDepthIsMinValueExclusive?: boolean;
            DwnDepthMaxValue?: number;
            DwnDepthMinValue?: number;
            DwnDepthRangeType?: number;
            DwnDepthValues?: number[];
            DyeId?: number[];
            DyeIdIsInList?: boolean;
            FlowControl?: string[];
            FlowDepthIncludeNulls?: boolean;
            FlowDepthIsMaxValueExclusive?: boolean;
            FlowDepthIsMinValueExclusive?: boolean;
            FlowDepthMaxValue?: number;
            FlowDepthMinValue?: number;
            FlowDepthRangeType?: number;
            FlowDepthValues?: number[];
            ForemanRecomnd?: string[];
            GroundCond?: string[];
            GroundCondScoreIncludeNulls?: boolean;
            GroundCondScoreIsMaxValueExclusive?: boolean;
            GroundCondScoreIsMinValueExclusive?: boolean;
            GroundCondScoreMaxValue?: number;
            GroundCondScoreMinValue?: number;
            GroundCondScoreRangeType?: number;
            GroundCondScoreValues?: number[];
            HydRatingIncludeNulls?: boolean;
            HydRatingIsMaxValueExclusive?: boolean;
            HydRatingIsMinValueExclusive?: boolean;
            HydRatingMaxValue?: number;
            HydRatingMinValue?: number;
            HydRatingRangeType?: number;
            HydRatingValues?: number[];
            InspCustFieldCatId?: number[];
            InspCustFieldCatIdIsInList?: boolean;
            InspectedBy?: string[];
            InspectedBySid?: number[];
            InspectedBySidIsInList?: boolean;
            JointLengthIncludeNulls?: boolean;
            JointLengthIsMaxValueExclusive?: boolean;
            JointLengthIsMinValueExclusive?: boolean;
            JointLengthMaxValue?: number;
            JointLengthMinValue?: number;
            JointLengthRangeType?: number;
            JointLengthValues?: number[];
            JointType?: string[];
            LiningMethod?: string[];
            Location?: string[];
            MapNumber?: string[];
            MasterTapeNum?: string[];
            Material?: string[];
            MaxResults?: number;
            Num1IncludeNulls?: boolean;
            Num1IsMaxValueExclusive?: boolean;
            Num1IsMinValueExclusive?: boolean;
            Num1MaxValue?: number;
            Num1MinValue?: number;
            Num1RangeType?: number;
            Num1Values?: number[];
            Num2IncludeNulls?: boolean;
            Num2IsMaxValueExclusive?: boolean;
            Num2IsMinValueExclusive?: boolean;
            Num2MaxValue?: number;
            Num2MinValue?: number;
            Num2RangeType?: number;
            Num2Values?: number[];
            Num3IncludeNulls?: boolean;
            Num3IsMaxValueExclusive?: boolean;
            Num3IsMinValueExclusive?: boolean;
            Num3MaxValue?: number;
            Num3MinValue?: number;
            Num3RangeType?: number;
            Num3Values?: number[];
            Num4IncludeNulls?: boolean;
            Num4IsMaxValueExclusive?: boolean;
            Num4IsMinValueExclusive?: boolean;
            Num4MaxValue?: number;
            Num4MinValue?: number;
            Num4RangeType?: number;
            Num4Values?: number[];
            Num5IncludeNulls?: boolean;
            Num5IsMaxValueExclusive?: boolean;
            Num5IsMinValueExclusive?: boolean;
            Num5MaxValue?: number;
            Num5MinValue?: number;
            Num5RangeType?: number;
            Num5Values?: number[];
            ObservationSum?: string[];
            ObservMethod?: number;
            OmRatingIncludeNulls?: boolean;
            OmRatingIsMaxValueExclusive?: boolean;
            OmRatingIsMinValueExclusive?: boolean;
            OmRatingMaxValue?: number;
            OmRatingMinValue?: number;
            OmRatingRangeType?: number;
            OmRatingValues?: number[];
            Owner?: string[];
            PipeId?: string[];
            PipeLengthIncludeNulls?: boolean;
            PipeLengthIsMaxValueExclusive?: boolean;
            PipeLengthIsMinValueExclusive?: boolean;
            PipeLengthMaxValue?: number;
            PipeLengthMinValue?: number;
            PipeLengthRangeType?: number;
            PipeLengthValues?: number[];
            PipeType?: string[];
            PoNumber?: string[];
            PrecipType?: string[];
            PrecipTypeScoreIncludeNulls?: boolean;
            PrecipTypeScoreIsMaxValueExclusive?: boolean;
            PrecipTypeScoreIsMinValueExclusive?: boolean;
            PrecipTypeScoreMaxValue?: number;
            PrecipTypeScoreMinValue?: number;
            PrecipTypeScoreRangeType?: number;
            PrecipTypeScoreValues?: number[];
            PreCleaning?: string[];
            RehabStatus?: string[];
            RepairsMade?: string[];
            ReverseSetup?: boolean;
            RimToGradeDIncludeNulls?: boolean;
            RimToGradeDIsMaxValueExclusive?: boolean;
            RimToGradeDIsMinValueExclusive?: boolean;
            RimToGradeDMaxValue?: number;
            RimToGradeDMinValue?: number;
            RimToGradeDRangeType?: number;
            RimToGradeDValues?: number[];
            RimToGradeUIncludeNulls?: boolean;
            RimToGradeUIsMaxValueExclusive?: boolean;
            RimToGradeUIsMinValueExclusive?: boolean;
            RimToGradeUMaxValue?: number;
            RimToGradeUMinValue?: number;
            RimToGradeURangeType?: number;
            RimToGradeUValues?: number[];
            RimToInvertDIncludeNulls?: boolean;
            RimToInvertDIsMaxValueExclusive?: boolean;
            RimToInvertDIsMinValueExclusive?: boolean;
            RimToInvertDMaxValue?: number;
            RimToInvertDMinValue?: number;
            RimToInvertDRangeType?: number;
            RimToInvertDValues?: number[];
            RimToInvertUIncludeNulls?: boolean;
            RimToInvertUIsMaxValueExclusive?: boolean;
            RimToInvertUIsMinValueExclusive?: boolean;
            RimToInvertUMaxValue?: number;
            RimToInvertUMinValue?: number;
            RimToInvertURangeType?: number;
            RimToInvertUValues?: number[];
            RootRatingIncludeNulls?: boolean;
            RootRatingIsMaxValueExclusive?: boolean;
            RootRatingIsMinValueExclusive?: boolean;
            RootRatingMaxValue?: number;
            RootRatingMinValue?: number;
            RootRatingRangeType?: number;
            RootRatingValues?: number[];
            SewerCategory?: string[];
            SewerUse?: string[];
            Shape?: string[];
            SmokeId?: number[];
            SmokeIdIsInList?: boolean;
            Spot?: string[];
            SpotScoreIncludeNulls?: boolean;
            SpotScoreIsMaxValueExclusive?: boolean;
            SpotScoreIsMinValueExclusive?: boolean;
            SpotScoreMaxValue?: number;
            SpotScoreMinValue?: number;
            SpotScoreRangeType?: number;
            SpotScoreValues?: number[];
            Street?: string[];
            StructRatingIncludeNulls?: boolean;
            StructRatingIsMaxValueExclusive?: boolean;
            StructRatingIsMinValueExclusive?: boolean;
            StructRatingMaxValue?: number;
            StructRatingMinValue?: number;
            StructRatingRangeType?: number;
            StructRatingValues?: number[];
            SuperAprvlComnts?: string[];
            SurfaceType?: string[];
            TapeLibraryNum?: string[];
            Text1?: string[];
            Text10?: string[];
            Text2?: string[];
            Text3?: string[];
            Text4?: string[];
            Text5?: string[];
            Text6?: string[];
            Text7?: string[];
            Text8?: string[];
            Text9?: string[];
            TotalLengthIncludeNulls?: boolean;
            TotalLengthIsMaxValueExclusive?: boolean;
            TotalLengthIsMinValueExclusive?: boolean;
            TotalLengthMaxValue?: number;
            TotalLengthMinValue?: number;
            TotalLengthRangeType?: number;
            TotalLengthValues?: number[];
            TvDateBegin?: Date;
            TvDateEnd?: Date;
            TvDateIsNull?: boolean;
            TvDateNotInRange?: boolean;
            TvDateRangeIncludeCurrent?: boolean;
            TvDateRangeLast?: number;
            TvDateRangeNext?: number;
            TvDateRangeUnits?: number;
            TvId?: number[];
            TvIdIsInList?: boolean;
            TvReason?: string[];
            UpdateMap?: boolean;
            UpDepthIncludeNulls?: boolean;
            UpDepthIsMaxValueExclusive?: boolean;
            UpDepthIsMinValueExclusive?: boolean;
            UpDepthMaxValue?: number;
            UpDepthMinValue?: number;
            UpDepthRangeType?: number;
            UpDepthValues?: number[];
            UpLocation?: string[];
            UpMh?: string[];
            UpType?: string[];
            VideoLocation?: string[];
            VideoTapeNum?: string[];
            VtrFormat?: string[];
            WidthIncludeNulls?: boolean;
            WidthIsMaxValueExclusive?: boolean;
            WidthIsMinValueExclusive?: boolean;
            WidthMaxValue?: number;
            WidthMinValue?: number;
            WidthRangeType?: number;
            WidthValues?: number[];
            WorkOrderId?: string[];
            YearLaidIncludeNulls?: boolean;
            YearLaidIsMaxValueExclusive?: boolean;
            YearLaidIsMinValueExclusive?: boolean;
            YearLaidMaxValue?: number;
            YearLaidMinValue?: number;
            YearLaidRangeType?: number;
            YearLaidValues?: number[];
            YearRenewedIncludeNulls?: boolean;
            YearRenewedIsMaxValueExclusive?: boolean;
            YearRenewedIsMinValueExclusive?: boolean;
            YearRenewedMaxValue?: number;
            YearRenewedMinValue?: number;
            YearRenewedRangeType?: number;
            YearRenewedValues?: number[];
        }
        export interface UnitsOfMeasure extends ServiceTypes.CoreRequestBase {
        }
        export interface Update extends ServiceTypes.CoreRequestBase {
            CertificateNumber?: string;
            City?: string;
            CondRating?: number;
            CounterStart?: string;
            CounterStop?: string;
            Customer?: string;
            CustomFieldValues?: {[key: number]: string};
            Date1?: Date;
            Date2?: Date;
            Date3?: Date;
            Date4?: Date;
            Date5?: Date;
            DateCleaned?: Date;
            Deterioration?: string;
            DeterScore?: number;
            Diameter?: number;
            DownLocation?: string;
            DownMh?: string;
            DownType?: string;
            DrainageArea?: string;
            DwnDepth?: number;
            DyeId?: number;
            FlowControl?: string;
            FlowDepth?: number;
            ForemanRecomnd?: string;
            GroundCond?: string;
            GroundCondScore?: number;
            HydRating?: number;
            InspCustFieldCatId?: number;
            InspectedBySid?: number;
            JointLength?: number;
            JointType?: string;
            LiningMethod?: string;
            Location?: string;
            MapNumber?: string;
            MasterTapeNum?: string;
            Material?: string;
            Num1?: number;
            Num2?: number;
            Num3?: number;
            Num4?: number;
            Num5?: number;
            ObservationSum?: string;
            ObservMethod?: number;
            OmRating?: number;
            Owner?: string;
            PipeId?: string;
            PipeLength?: number;
            PipeType?: string;
            PoNumber?: string;
            PrecipType?: string;
            PrecipTypeScore?: number;
            PreCleaning?: string;
            RehabStatus?: string;
            RepairsMade?: string;
            ReverseSetup?: boolean;
            RimToGradeD?: number;
            RimToGradeU?: number;
            RimToInvertD?: number;
            RimToInvertU?: number;
            RootRating?: number;
            SewerCategory?: string;
            SewerUse?: string;
            Shape?: string;
            SmokeId?: number;
            Spot?: string;
            SpotScore?: number;
            Street?: string;
            StructRating?: number;
            SuperAprvlComnts?: string;
            SurfaceType?: string;
            TapeLibraryNum?: string;
            Text1?: string;
            Text10?: string;
            Text2?: string;
            Text3?: string;
            Text4?: string;
            Text5?: string;
            Text6?: string;
            Text7?: string;
            Text8?: string;
            Text9?: string;
            TotalLength?: number;
            TvDate?: Date;
            TvId: number;
            TvReason?: string;
            UpdateGis?: boolean;
            UpdateMap?: boolean;
            UpDepth?: number;
            UpLocation?: string;
            UpMh?: string;
            UpType?: string;
            VideoTapeNum?: string;
            VtrFormat?: string;
            Width?: number;
            WorkOrderId?: string;
            YearLaid?: number;
            YearRenewed?: number;
        }
        export interface UpdateObservation extends ServiceTypes.CoreRequestBase {
            Cause?: number;
            CctvCode?: string;
            ClockTo?: number;
            Continuous?: string;
            DistFromDown?: number;
            DistFromUp?: number;
            Joint?: string;
            ObservationId: number;
            ObservDesc?: string;
            ObservDescScore?: number;
            ObservPos?: string;
            ObservRemarks?: string;
            ObservType?: string;
            TapeRead?: string;
            ValueDimension1?: number;
            ValueDimension2?: number;
            ValuePercent?: number;
        }
        export interface UpstreamNode extends ServiceTypes.CoreRequestBase {
            EntityType: string;
            EntityUid: string;
        }
    }
    export namespace Responses {
        export interface AddObservation extends ServiceTypes.CoreResponseBase_<CoreTypes.TvObservation> {}
        export interface ById extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspection> {}
        export interface ByIds extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspection[]> {}
        export interface ByWorkOrder extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspection[]> {}
        export interface CctvObservationCodeTypes extends ServiceTypes.CoreResponseBase_<CoreTypes.CctvCodeDescGrade[]> {}
        export interface ChangeCustomFieldCategory extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspectionBase[]> {}
        export interface CodeDescriptions extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspectionCodeDescs> {}
        export interface ConfirmDyeLeaks extends ServiceTypes.CoreResponseBase_<{[key: number]: boolean}> {}
        export interface ConfirmSmokeTests extends ServiceTypes.CoreResponseBase_<{[key: number]: boolean}> {}
        export interface Create extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspection> {}
        export interface CreateFromPacp extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspection> {}
        export interface CreateSearchDefinition extends ServiceTypes.CoreResponseBase_<CoreTypes.SearchDefinition> {}
        export interface DescriptionScores extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspectionDescScores> {}
        export interface DownstreamNode extends ServiceTypes.CoreResponseBase_<CoreTypes.WorkOrderEntity> {}
        export interface InspectedBy extends ServiceTypes.CoreResponseBase_<CoreTypes.RelEmpToField[]> {}
        export interface Observation extends ServiceTypes.CoreResponseBase_<CoreTypes.TvObservation> {}
        export interface ObservationCauseCodeDescriptions extends ServiceTypes.CoreResponseBase_<CoreTypes.CodeDesc[]> {}
        export interface ObservationCodeTypes extends ServiceTypes.CoreResponseBase_<CoreTypes.CodeDescScore[]> {}
        export interface Observations extends ServiceTypes.CoreResponseBase_<CoreTypes.TvObservation[]> {}
        export interface Search extends ServiceTypes.CoreResponseBase_<number[]> {}
        export interface UnitsOfMeasure extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspectionFieldUnits> {}
        export interface Update extends ServiceTypes.CoreResponseBase_<CoreTypes.TvInspectionBase> {}
        export interface UpdateObservation extends ServiceTypes.CoreResponseBase_<CoreTypes.TvObservation> {}
        export interface UpstreamNode extends ServiceTypes.CoreResponseBase_<CoreTypes.WorkOrderEntity> {}
    }
    export interface ITvInspectionService {
        AddObservation?: (request: Requests.AddObservation) => AbortablePromise<Responses.AddObservation>;
        ById?: (request: Requests.ById) => AbortablePromise<Responses.ById>;
        ByIds?: (request: Requests.ByIds) => AbortablePromise<Responses.ByIds>;
        ByWorkOrder?: (request: Requests.ByWorkOrder) => AbortablePromise<Responses.ByWorkOrder>;
        CctvObservationCodeTypes?: (request: Requests.CctvObservationCodeTypes) => AbortablePromise<Responses.CctvObservationCodeTypes>;
        ChangeCustomFieldCategory?: (request: Requests.ChangeCustomFieldCategory) => AbortablePromise<Responses.ChangeCustomFieldCategory>;
        CodeDescriptions?: (request: Requests.CodeDescriptions) => AbortablePromise<Responses.CodeDescriptions>;
        ConfirmDyeLeaks?: (request: Requests.ConfirmDyeLeaks) => AbortablePromise<Responses.ConfirmDyeLeaks>;
        ConfirmSmokeTests?: (request: Requests.ConfirmSmokeTests) => AbortablePromise<Responses.ConfirmSmokeTests>;
        Create?: (request: Requests.Create) => AbortablePromise<Responses.Create>;
        CreateFromPacp?: (request: Requests.CreateFromPacp) => AbortablePromise<Responses.CreateFromPacp>;
        CreateSearchDefinition?: (request: Requests.CreateSearchDefinition) => AbortablePromise<Responses.CreateSearchDefinition>;
        DescriptionScores?: (request: Requests.DescriptionScores) => AbortablePromise<Responses.DescriptionScores>;
        DownstreamNode?: (request: Requests.DownstreamNode) => AbortablePromise<Responses.DownstreamNode>;
        InspectedBy?: (request: Requests.InspectedBy) => AbortablePromise<Responses.InspectedBy>;
        Observation?: (request: Requests.Observation) => AbortablePromise<Responses.Observation>;
        ObservationCauseCodeDescriptions?: (request: Requests.ObservationCauseCodeDescriptions) => AbortablePromise<Responses.ObservationCauseCodeDescriptions>;
        ObservationCodeTypes?: (request: Requests.ObservationCodeTypes) => AbortablePromise<Responses.ObservationCodeTypes>;
        Observations?: (request: Requests.Observations) => AbortablePromise<Responses.Observations>;
        Search?: (request: Requests.Search) => AbortablePromise<Responses.Search>;
        UnitsOfMeasure?: (request: Requests.UnitsOfMeasure) => AbortablePromise<Responses.UnitsOfMeasure>;
        Update?: (request: Requests.Update) => AbortablePromise<Responses.Update>;
        UpdateObservation?: (request: Requests.UpdateObservation) => AbortablePromise<Responses.UpdateObservation>;
        UpstreamNode?: (request: Requests.UpstreamNode) => AbortablePromise<Responses.UpstreamNode>;
    }
}
